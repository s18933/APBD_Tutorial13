// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Task13.Models;

namespace Task13.Migrations
{
    [DbContext(typeof(Task13DbContext))]
    partial class Task13DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Task13.Models.Confectionery", b =>
                {
                    b.Property<int>("IdConfecti")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("PricePerItem")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.HasKey("IdConfecti");

                    b.ToTable("Confectioneries");

                    b.HasData(
                        new
                        {
                            IdConfecti = 1,
                            Name = "Spider Donut",
                            PricePerItem = 7,
                            Type = "Made with Spider Cider in the batter."
                        },
                        new
                        {
                            IdConfecti = 2,
                            Name = "Hot Cat",
                            PricePerItem = 30,
                            Type = "Like a hot dog, but with cat ears."
                        });
                });

            modelBuilder.Entity("Task13.Models.Confectionery_Order", b =>
                {
                    b.Property<int>("IdConfection")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdConfection", "IdOrder");

                    b.HasIndex("IdOrder");

                    b.ToTable("Confectionery_Orders");

                    b.HasData(
                        new
                        {
                            IdConfection = 1,
                            IdOrder = 1,
                            Notes = "Eat food made by spiders, for spiders, of spiders!",
                            Quantity = 2
                        },
                        new
                        {
                            IdConfection = 2,
                            IdOrder = 2,
                            Notes = "Thirty is just an excessive.",
                            Quantity = 30
                        });
                });

            modelBuilder.Entity("Task13.Models.Customer", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdClient");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Name = "Frisk",
                            Surname = "TheHuman"
                        },
                        new
                        {
                            IdClient = 2,
                            Name = "Chara",
                            Surname = "Error"
                        });
                });

            modelBuilder.Entity("Task13.Models.Employee", b =>
                {
                    b.Property<int>("IdEmpl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("IdEmpl");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            IdEmpl = 1,
                            Name = "Muffet",
                            Surname = "TheSpider"
                        },
                        new
                        {
                            IdEmpl = 2,
                            Name = "Sans",
                            Surname = "TheSkeleton"
                        });
                });

            modelBuilder.Entity("Task13.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateAccepted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFinished")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.HasKey("IdOrder");

                    b.HasIndex("IdClient");

                    b.HasIndex("IdEmployee");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            IdOrder = 1,
                            DateAccepted = new DateTime(2012, 3, 9, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFinished = new DateTime(2012, 3, 9, 10, 5, 0, 0, DateTimeKind.Unspecified),
                            IdClient = 2,
                            IdEmployee = 1,
                            Notes = "For increasing HP"
                        },
                        new
                        {
                            IdOrder = 2,
                            DateAccepted = new DateTime(2012, 2, 9, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFinished = new DateTime(2012, 2, 9, 10, 20, 0, 0, DateTimeKind.Unspecified),
                            IdClient = 1,
                            IdEmployee = 2,
                            Notes = "For placing food on the head"
                        });
                });

            modelBuilder.Entity("Task13.Models.Confectionery_Order", b =>
                {
                    b.HasOne("Task13.Models.Confectionery", "Confectionery")
                        .WithMany("Confectionery_Orders")
                        .HasForeignKey("IdConfection")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task13.Models.Order", "Order")
                        .WithMany("Confectionery_Orders")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Task13.Models.Order", b =>
                {
                    b.HasOne("Task13.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Task13.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("IdEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
